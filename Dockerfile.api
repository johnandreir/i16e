# MongoDB API server
FROM node:20-alpine

WORKDIR /app

# Install system dependencies and curl for health checks
RUN apk add --no-cache curl

# Copy package files first for better caching
COPY package*.json ./

# Install only production dependencies for API
RUN npm install --only=production

# Copy application files
COPY server/mongodb-api-server.cjs ./mongodb-api-server.cjs

# Create non-root user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001

# Change ownership of the app directory
RUN chown -R nodejs:nodejs /app
USER nodejs

# Expose port
EXPOSE 3001

# Health check with increased start period for Docker environments
HEALTHCHECK --interval=30s --timeout=10s --start-period=60s --retries=5 \
    CMD curl -f http://localhost:3001/api/health || exit 1

# Set environment variables
ENV IN_DOCKER=true
ENV MONGODB_VALIDATION_CACHE_BUSTER=20250928

# Start the application with a delay to ensure MongoDB is ready
# Also runs validation update script before starting the API
CMD ["sh", "-c", "echo 'Waiting for MongoDB to initialize...' && sleep 10 && node mongodb-api-server.cjs"]